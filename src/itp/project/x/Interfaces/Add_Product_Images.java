/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itp.project.x.Interfaces;

import bsmanagementsystem.MainPage;
import com.mysql.jdbc.Connection;
import DBConnect.DBconnect;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Asus
 */
public class Add_Product_Images extends javax.swing.JFrame {

    /**
     * Creates new form Add_Product_Images
     */
    Connection con = null;
    PreparedStatement pst = null;

    public Add_Product_Images() {
        initComponents();
        con = (Connection) DBconnect.connect();
    }
    String imgPath = null;

    public ImageIcon ResizeImage(String ImagePath, byte[] pic) {
        ImageIcon myImage = null;
        if (ImagePath != null) {
            myImage = new ImageIcon(ImagePath);
        } else {
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image newImg = img.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);

        return image;
    }

    public static Connection getConnection() {
        Connection con = null;

        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/businessmanagementsystem", "root", "");
            return con;
        } catch (Exception e) {

            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "not Connected");
            return null;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idBox = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        find = new javax.swing.JButton();
        Insert_Button = new javax.swing.JButton();
        update = new javax.swing.JButton();
        BTN_CHOOSE = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Product ID");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 90, 150, 30);

        idBox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(idBox);
        idBox.setBounds(220, 90, 160, 30);

        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(530, 630, 160, 40);

        find.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        find.setText("Find");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });
        getContentPane().add(find);
        find.setBounds(520, 80, 110, 40);

        Insert_Button.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Insert_Button.setText("Insert");
        Insert_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(Insert_Button);
        Insert_Button.setBounds(80, 630, 160, 40);

        update.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update);
        update.setBounds(310, 630, 160, 40);

        BTN_CHOOSE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BTN_CHOOSE.setText("Choose an Image");
        BTN_CHOOSE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_CHOOSEActionPerformed(evt);
            }
        });
        getContentPane().add(BTN_CHOOSE);
        BTN_CHOOSE.setBounds(120, 470, 460, 50);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(1230, 10, 110, 50);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 160, 580, 270);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/itp/project/x/Interfaces/images/subbg.jpeg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1350, 720);

        setSize(new java.awt.Dimension(1366, 767));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_CHOOSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_CHOOSEActionPerformed
        // Browse Image
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));//set the default folder when the file chooser loads
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "gif", "png");//allowed only these file formats to select
        file.addChoosableFileFilter(filter);//set the filter to the file chooser
        int result = file.showSaveDialog(null);
        //if the user click on save in jfilechooser
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
                    jLabel2.setIcon(ResizeImage(path,null));
            JLabel jLabel = new JLabel();
            jLabel.setIcon(ResizeImage(path, null));
            jLabel2.add(jLabel);
            imgPath = path;
            
        } //IF the user click on save in jfilechooser
        else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No file select");
        }
    }//GEN-LAST:event_BTN_CHOOSEActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new Product_Lookup().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void Insert_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_ButtonActionPerformed
        // insert selected image to the database

        /*if (imgPath != null) {
            try {
                PreparedStatement ps = getConnection().prepareStatement("insert into product_images(image) values(?) ");
                InputStream img = new FileInputStream(new File(imgPath));
                ps.setBlob(1, img);
                if (ps.executeUpdate() == 1) {
                    JOptionPane.showMessageDialog(null, "image Inserted");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Add_Product_Images.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Add_Product_Images.class.getName()).log(Level.SEVERE, null, ex);
            }
        }*/
        
         ResultSet rs = null;
        PreparedStatement psmnt = null;
        FileInputStream fis;
        Connection connection = null;
        String connectionURL = "jdbc:mysql://localhost:3306/businessmanagementsystem";

        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();

            connection = (Connection) DriverManager.getConnection(connectionURL, "root", "");
            File image = new File(imgPath);
            psmnt = connection.prepareStatement("insert into product_images(productID,image) " + "values(?,?)");
            psmnt.setString(1, idBox.getText());
            System.out.println("**** insert " + idBox.getText() );
            fis = new FileInputStream(image);
            psmnt.setBinaryStream(2, (InputStream) fis, (int) (image.length()));
            int s = psmnt.executeUpdate();
            if (s > 0) {
                System.out.println("Uploaded successfully !");
                JOptionPane.showMessageDialog(null, "Image Inserted");
            } else {
                System.out.println("unsucessfull to upload image.");
            }
        } catch (Exception ex) {
            System.out.println("Error --->> " + ex);
        } finally {
            try {
                connection.close();
            } catch (SQLException ex) {
                System.out.println("Error-->>> " + ex);
            }
            try {
                psmnt.close();
            } catch (SQLException ex) {
                System.out.println("Error-->>> " + ex);
            }
        }
        
        
        
    }//GEN-LAST:event_Insert_ButtonActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // updete button code is here...
        if (imgPath != null)
        {
            try {
                String id = idBox.getText();
                InputStream img = new FileInputStream(imgPath);
                String UpdateQuery ="update product_images set image = ? where productID = '"+id+"'" ;
                
                PreparedStatement ps = getConnection().prepareStatement(UpdateQuery);
                ps.setBlob(1,img);
//                ps.setInt(1,Integer.parseInt(id));
                if(ps.executeUpdate() == 1)
                {
                    JOptionPane.showMessageDialog(null, "Image Updated");
                }else{
                    JOptionPane.showMessageDialog(null, "no Image Exist with this Id");
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Add_Product_Images.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Add_Product_Images.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else
        {
            JOptionPane.showMessageDialog(null, "no Image selected");
        }
        imgPath=null;
        
        
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       // to create delete button
        String id =idBox.getText();
        String deleteQuery ="delete from product_images where productID = '"+id+"'" ;
        try {
            PreparedStatement ps = getConnection().prepareStatement(deleteQuery);
//            ps.setInt(2,id);
             if(ps.executeUpdate() == 1)
                {
                    JOptionPane.showMessageDialog(null, "Image Deleted");
                }else{
                    JOptionPane.showMessageDialog(null, "no Image Exist with this Id");
                }
        } catch (Exception e) {
               Logger.getLogger(Add_Product_Images.class.getName()).log(Level.SEVERE, null, e);
        }
        jLabel2.setIcon(null);
    }//GEN-LAST:event_deleteActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        
       // find button code is here
       
        String id=idBox.getText();
        String selectQuery = "select * from product_images where productID = '"+id+"'";
        
        Statement st;
        ResultSet rs;
        try {
            st = getConnection().createStatement();
            rs = st.executeQuery(selectQuery);
            
            if (rs.next())
            {
                jLabel2.setIcon(ResizeImage(null, rs.getBytes("image")));
            }else
            {
                JOptionPane.showMessageDialog(null, "Image not found");
            }
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_findActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Product_Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Product_Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Product_Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Product_Images.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_Product_Images().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_CHOOSE;
    private javax.swing.JButton Insert_Button;
    private javax.swing.JButton delete;
    private javax.swing.JButton find;
    private javax.swing.JTextField idBox;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
